@using MyNurseApp.Web.ViewModels.Review
@model IEnumerable<ReviewViewModel>

@{
    ViewData["Title"] = "Reviews";
    var currentUserId = User.Claims.FirstOrDefault(c => c.Type == System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
}

<h1>@ViewData["Title"]</h1>

@if (User.Identity != null && User.Identity.IsAuthenticated)
{
    if (!Model.Any(m => m.UserId.ToString() == currentUserId))
    {
        <div class="mb-3">
            <a asp-action="CreateReview" class="btn btn-primary">Add Review</a>
        </div>
    }
    else
    {
        <p class="text-muted">Thank you for the given review.</p>
    }
}
else
{
    <p class="text-muted">You must be logged in to add a review.</p>
}

@if (Model != null && Model.Any())
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Review Content</th>
                <th>Rating (@Math.Round(Model.Average(x => x.Rating),1)) </th>
                <th>User</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var review in Model)
            {
                <tr>
                    <td>@review.Content</td>
                    <td>@review.Rating</td>
                    <td>@review.User.UserName</td>
                    <td>
                        @if (review.UserId.ToString() == currentUserId || User.IsInRole("Admin"))
                        {
                            <form asp-action="DeleteReview" asp-route-id="@review.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this review?');">
                                <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="text-muted">There are no reviews available yet.</p>
}
